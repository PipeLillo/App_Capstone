# azure-pipelines.yml
# Pipeline de CI/CD para una Azure Function (Node.js) ubicada en la carpeta /azure-functions

trigger:
- main # Se activa con cada commit a la rama 'main'

variables:
  # --- Tus valores específicos ---
  azureSubscription: 'Conexion-Azure-Principal'
  functionAppName: 'savetosql'

  # --- Variables de configuración del Pipeline ---
  nodeVersion: '18.x'
  vmImageName: 'ubuntu-latest'
  workingDirectory: 'azure-functions'

stages:
- stage: BuildAndDeploy
  displayName: 'Compilar y Desplegar Función'
  jobs:
  - job: DeployJob
    displayName: 'Desplegar en Azure'
    pool:
      vmImage: $(vmImageName)

    steps:
    # 1. Configurar la versión de Node.js a utilizar
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Instalar Node.js $(nodeVersion)'

    # 2. Moverse al directorio de la función e instalar las dependencias
    - script: |
        pushd $(workingDirectory)
        npm install
        popd
      displayName: 'Instalar dependencias del proyecto (npm install)'

    # 3. Empaquetar el código de la función en un archivo .zip
    - task: ArchiveFiles@2
      displayName: 'Empaquetar la aplicación en un .zip'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/$(workingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    # 4. Desplegar el paquete .zip en la Azure Function App
    - task: AzureFunctionApp@1
      displayName: 'Desplegar en Azure Function App'
      inputs:
        azureSubscription: '$(azureSubscription)'
        appType: 'functionApp'
        appName: '$(functionAppName)'
        package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        deploymentMethod: 'zipDeploy'